class Contenedor {

constructor(url) {

this.url = url

}

/*Metodos*/

async getAll() {

try {

const contenido = await fs.promises.readFile(“./productos2.txt”, “utf-8”)

const datos = JSON.parse(contenido)

return datos

} catch (error) {

return console.log(error)

}

}

async save() {

const data = await this.getAll();

console.log(data.id)

let itemID = this.url.id;

try {

if(itemID == 0){

await fs.promises.appendFile(“./productos2.txt”, JSON.stringify(this.url));

itemID +=

console.log(`Producto Guardado, ID N° ${itemID}`)

}

} catch (error) {

console.log(error)

}

}

async getById(num) {

try {

const data = await this.getAll();

const filtrado = data.find((item) \=> {

if (num == item.id) {

return item

} else {

return null

}

})

return console.log(“getByID:”,filtrado)

} catch (error) {

return console.log(error)

}

}

async deleteAll() {

try {

await fs.promises.writeFile(“productos2.txt”, “[]”)

} catch (error) {

console.log(error)

}

}

async deletByID(num) {

try {

const data = await this.getAll();

const filtrado = data.filter((item) \=> {

if (num != item.id) {

return item

} else {

return null

}

})

const nuevoArray\= fs.promises.writeFile(“./productos2.txt”, JSON.stringify(filtrado));

console.log(“deletByID: Producto Eliminado correctamente”)

return nuevoArray

} catch (error) {

return console.log(error)

}

}

}